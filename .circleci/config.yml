version: 2
jobs:
  build:
    docker:
      - image: fitnesskeeper/docker-ci-builder
    steps:
      - checkout
      - run:
          name: Build and push Docker image
          command: |
            # setup empty workspace for persisting DOCKER_BUILD_TAG/IMAGE_TAG
            mkdir -p /tmp/workspace
            echo > /tmp/workspace/docker_image
            echo > /tmp/workspace/git_commit_sha
            # check if this image exists already on dockerhub
            echo "checking recent commits"
            get-latest-nonmerge-commit.sh --debug
            commit=$(get-latest-nonmerge-commit.sh)
            if [[ "$commit" ]]; then
              echo "most recent non-merge commit: $commit"
              echo "would have checked dockerhub for it"
              found=$FOUND
              if [[ "$found" ]]; then
                echo "found image already on dockerhub"
                should_build=no
              else
                echo "didn't find this image tag on dockerhub"
                should_build=yes
              fi
            else
              echo "no non-merge commit found, exiting"
              exit 1
            fi
            # setup proper tags
            if [[ "$CIRCLE_BRANCH" = "master" || "$CIRCLE_BRANCH" = "noss-test" ]]; then
              DOCKER_TAG=latest
              DOCKER_BUILD_TAG="build-${CIRCLE_BUILD_NUM}"
              should_push_commit=yes
            elif [[ "$CIRCLE_TAG" ]]; then
              DOCKER_TAG=$CIRCLE_TAG
              if [[ $(echo $CIRCLE_TAG | grep ^deploy-dev- ) ]]; then
                DOCKER_TAG=deploy-dev
                DOCKER_BUILD_TAG=$CIRCLE_TAG
                should_push_commit=yes
              fi
            elif [[ "$CIRCLE_BRANCH" = "staging-release" ]]; then
              if [[ "$should_build" = "yes" ]] ; then
                echo "This commit $commit has not been built yet, so failing"
                echo " the build for staging."
                echo "Make sure this commit is built on master, and there are"
                echo " only ff merge commits to staging and those"
                echo " merge commits have no conflicts"
                exit 1
              fi
              DOCKER_TAG=staging-release
              DOCKER_BUILD_TAG="staging-release-build-${CIRCLE_BUILD_NUM}"
              should_push_commit_rc=yes
            elif [[ "$CIRCLE_BRANCH" = "production-release" ]]; then
              if [[ "$should_build" = "yes" ]] ; then
                echo "This commit $commit has not been built yet, so failing"
                echo " the build for production."
                echo "Make sure this commit is built on master, and there are"
                echo " only ff merge commits to production and those"
                echo " merge commits have no conflicts"
                exit 1
              fi
              echo "would have checked dockerhub for ${commit}-rc"
              found=$FOUND_RC
              if [[ ! "$found" ]]; then
                echo "Did not find ${commit}-rc, you must test this first on"
                echo " staging before deploying to production."
                exit 1
              fi
              DOCKER_TAG=production-release
              DOCKER_BUILD_TAG="production-release-build-${CIRCLE_BUILD_NUM}"
            else
              DOCKER_TAG=$CIRCLE_BRANCH
              DOCKER_BUILD_TAG="${CIRCLE_BRANCH}-build-${CIRCLE_BUILD_NUM}"
            fi
            # display tags
            echo "tag is: " $DOCKER_TAG
            if [[ "$should_build" = "yes" ]] ; then
              echo "building container"
              if [[ "$should_push_commit" = "yes" ]] ; then
                echo "setting up for webpack to upload to S3"
              fi
              if [[ "$should_push_commit" = "yes" ]] ; then
                # tag and push this commit hash
                echo "would have pushed this commit tag $commit"
              fi
            else
              echo "pulling and re-tagging container"
              if [[ "$should_push_commit_rc" = "yes" ]] ; then
                # tag and push ${this commit hash}-rc
                echo "pushing this commit tag ${commit}-rc"
              fi
            fi
            # check if we should push to additional tag
            if [[ "$DOCKER_BUILD_TAG" ]]; then
              echo "persisting commit ${commit}"
              echo $commit > /tmp/workspace/git_commit_sha
              echo "also pushing to tag: " $DOCKER_BUILD_TAG
              # persist IMAGE_TAG for next step of workflow
              DOCKER_IMAGE="${DOCKER_BUILD_TAG}"
              echo "persisting docker_image: ${DOCKER_IMAGE} to workspace"
              echo "$DOCKER_IMAGE" > /tmp/workspace/docker_image
            fi
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker_image
            - git_commit_sha
  deploy-dev:
    docker:
      - image: fitnesskeeper/docker-ci-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Placeholder for deploy dev
          command: |
            DOCKER_IMAGE=$(cat /tmp/workspace/docker_image)
            if [[ ! "$DOCKER_IMAGE" ]]; then
              echo "could not read docker_image from workspace"
              exit 1
            fi
            GIT_COMMIT_SHA=$(cat /tmp/workspace/git_commit_sha)
            if [[ ! "$GIT_COMMIT_SHA" ]]; then
              echo "could not read git_commit_sha from workspace"
              exit 1
            fi
            echo "triggering circle ci build that would deploy image: ${DOCKER_IMAGE} to dev environment"
            echo $GIT_COMMIT_SHA

  deploy-staging:
    docker:
      - image: fitnesskeeper/docker-ci-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Placeholder for deploy staging
          command: |
            DOCKER_IMAGE=$(cat /tmp/workspace/docker_image)
            if [[ ! "$DOCKER_IMAGE" ]]; then
              echo "could not read api_docker_image from workspace"
              exit 1
            fi
            GIT_COMMIT_SHA=$(cat /tmp/workspace/git_commit_sha)
            if [[ ! "$GIT_COMMIT_SHA" ]]; then
              echo "could not read git_commit_sha from workspace"
              exit 1
            fi
            echo "triggering circle ci build that would deploy image: ${DOCKER_IMAGE} to staging environment"
            echo $GIT_COMMIT_SHA

  deploy-prod:
    docker:
      - image: fitnesskeeper/docker-ci-builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Placeholder for deploy prod
          command: |
            DOCKER_IMAGE=$(cat /tmp/workspace/docker_image)
            if [[ ! "$DOCKER_IMAGE" ]]; then
              echo "could not read docker_image from workspace"
              exit 1
            fi
            GIT_COMMIT_SHA=$(cat /tmp/workspace/git_commit_sha)
            if [[ ! "$GIT_COMMIT_SHA" ]]; then
              echo "could not read git_commit_sha from workspace"
              exit 1
            fi
            echo "triggering circle ci build that would deploy image: ${DOCKER_IMAGE} to prod"
            echo $GIT_COMMIT_SHA

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^(v(\d+\.){2}\d+|deploy-dev-.+)$/
      - deploy-dev:
          requires:
            - build
          filters:
            tags:
              only: /^deploy-dev-.+/
            branches:
              ignore: /.*/
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging-release
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: production-release
